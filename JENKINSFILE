pipeline {
    agent any

    stages {
        stage('Get Code') {
            steps {
                // Obtener cÃ³digo del repo
                git 'https://github.com/martaavi/cursoDevops.git'
                bat 'dir'
                echo WORKSPACE
            }
        }
        
        stage('Unit') {
            steps {
               catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                    bat '''
                        set PYTHONPATH=.
                        python -m pytest --junitxml=result-unit.xml test\\unit
                    '''
                    junit 'result*.xml'
                }
            }
        }
        
        stage('Coverage') {
            steps {
                bat '''
                    coverage run --branch --source=app --omit=app\\__init__.py,app\\api.py python -m pytest test\\unit
                    coverage xml
                '''
                catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                    cobertura coberturaReportFile: 'coverage.xml', conditionalCoverageTargets: '80:90', lineCoverageTargets: '85:95'
                }
            }
        }
        
        stage('Security') {
            steps {
                bat '''
                    bandit --exit-zero -r . -f custom -o bandit.out --msg-template "{abspath}:{line}: [{test_id}] {msg}"
                '''
                recordIssues tools: [pyLint(name: 'Bandit', pattern: 'bandit.out')], qualityGates: [[threshold: 2, type: 'TOTAL', unstable: true], [threshold: 4, type: 'TOTAL', unstable: false]]
            }
        }
        
        stage('Static') {
            steps {
                bat '''
                    flake8 --exit-zero --format=pylint app >flake8.out
                    '''
                recordIssues tools: [flake8(name: 'Flake8', pattern: 'flake8.out')], qualityGates: [[threshold: 8, type: 'TOTAL', unstable: true], [threshold: 10, type: 'TOTAL', unstable: false]]
            }
        }
        
        stage('Performance') {
            steps {
                bat '''
                    set FLASK_APP=app\\api.py
                    start flask run
                    C:\\Users\\marta\\Downloads\\apache-jmeter-5.6.3\\apache-jmeter-5.6.3\\bin\\jmeter -n -t test\\jmeter\\flask.jmx -f -l flask.jtl
                '''
                perfReport sourceDataFiles: 'flask.jtl'
            }
            
        }
        
    }
}
        
        

